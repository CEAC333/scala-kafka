{"name":"Scala-kafka","tagline":"Quick up and running using Scala for Apache Kafka","body":"scala-kafka\r\n===========\r\n\r\nQuick up and running using Scala for Apache Kafka\r\n\r\nUse Vagrant to get up and running.\r\n\r\n1) Install Vagrant [http://www.vagrantup.com/](http://www.vagrantup.com/)  \r\n2) Install Virtual Box [https://www.virtualbox.org/](https://www.virtualbox.org/)  \r\n\r\nIn the main kafka folder  \r\n\r\n1) vagrant up  \r\n2) ./gradlew test\r\n\r\nonce this is done \r\n* Zookeeper will be running 192.168.86.5\r\n* Broker 1 on 192.168.86.10\r\n* All the tests in src/test/scala/* should pass  \r\n\r\nIf you want you can login to the machines using vagrant ssh <machineName> but you don't need to.\r\n\r\nYou can access the brokers and zookeeper by their IP from your local without having to go into vm.\r\n\r\ne.g.\r\n\r\nbin/kafka-console-producer.sh --broker-list 192.168.86.10:9092 --topic <get his from the random topic created in test>\r\n\r\nbin/kafka-console-consumer.sh --zookeeper 192.168.86.5:2181 --topic <get his from the random topic created in test> --from-beginning\r\n\r\nscala-go-kafka\r\n===============\r\n\r\nScala-kafka and Go-kafka working together using Apache Avro and Schema Registry\r\n\r\nInstall Docker [https://docs.docker.com/installation/#installation](https://docs.docker.com/installation/#installation)  \r\n\r\nIn the main scala-kafka folder  \r\n\r\n1) ./gradlew scalago jar    \r\n2) ./start-scala-go.sh    \r\n3) ./stop-scala-go.sh    ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}